// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LDSoft.APOL.UI.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Cadastro Imagens Jeimis")]
    public partial class CadastroImagensJeimisFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CadastroImagensJeimis.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Cadastro Imagens Jeimis", "Na tentativa de fazer um Apol mais bonito\r\nComo um usuário do sistema\r\nEu gostari" +
                    "a de visualizar uma imagem diferente ao logar em cada módulo do Apol", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Que Estou na Tela de Listagem de Imagens do Jeimis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Consultar imagem do Jeimis para todos os módulos")]
        [NUnit.Framework.CategoryAttribute("paraTelaDeConsultaSucesso")]
        public virtual void ConsultarImagemDoJeimisParaTodosOsModulos()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Consultar imagem do Jeimis para todos os módulos", new string[] {
                        "paraTelaDeConsultaSucesso"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 12
 testRunner.Given("que existe a imagem \"default.jpg\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 13
 testRunner.When("acesso a lista de imagens do Jeimis no \"1\" registro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 14
 testRunner.Then("visualizo o nome \"default.jpg\" e o módulo \" \" da imagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Consultar imagem do Jeimis para o módulo de Patente")]
        [NUnit.Framework.CategoryAttribute("paraTelaDeConsultaSucesso")]
        public virtual void ConsultarImagemDoJeimisParaOModuloDePatente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Consultar imagem do Jeimis para o módulo de Patente", new string[] {
                        "paraTelaDeConsultaSucesso"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 18
 testRunner.Given("que existe a imagem \"patente.jpg\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 19
 testRunner.When("acesso a lista de imagens do Jeimis para o módulo \"Patente\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 20
 testRunner.Then("visualizo o nome \"patente.jpg\" e o módulo \"Patente\" da imagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Excluir imagem para o módulo de Marca")]
        [NUnit.Framework.CategoryAttribute("paraTelaDeConsultaSucesso")]
        public virtual void ExcluirImagemParaOModuloDeMarca()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Excluir imagem para o módulo de Marca", new string[] {
                        "paraTelaDeConsultaSucesso"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 24
 testRunner.Given("que cadastrei uma imagem para o módulo de Marca", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 25
 testRunner.When("clico em excluir o registro do Jeimis para a imagem \"marca.jpg\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 26
 testRunner.Then("visualizo a mensagem \"Imagem excluida com sucesso!\" na tela", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Consultar imagem para o módulo de Contratos")]
        [NUnit.Framework.CategoryAttribute("paraTelaDeConsultaFalha")]
        public virtual void ConsultarImagemParaOModuloDeContratos()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Consultar imagem para o módulo de Contratos", new string[] {
                        "paraTelaDeConsultaFalha"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 30
 testRunner.Given("que não existe imagem para o módulo \"Contratos\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 31
 testRunner.When("acesso a lista de imagens do Jeimis para o módulo \"Contratos\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 32
 testRunner.Then("obtenho um item nulo para a imagem do Jeimis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Proibir a exclusão de uma imagem para o módulo Todos")]
        [NUnit.Framework.CategoryAttribute("paraTelaDeConsultaFalha")]
        public virtual void ProibirAExclusaoDeUmaImagemParaOModuloTodos()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Proibir a exclusão de uma imagem para o módulo Todos", new string[] {
                        "paraTelaDeConsultaFalha"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 36
 testRunner.Given("que existe a imagem \"default.jpg\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 37
 testRunner.When("clico em excluir o registro do Jeimis para a imagem \"default.jpg\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 38
 testRunner.Then("visualizo a mensagem \"Não é possivel excluir uma imagem do módulo Todos!\" na tela" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cadastrar Imagem para o Módulo de Marca")]
        [NUnit.Framework.CategoryAttribute("paraTelaDeCadastroSucesso")]
        public virtual void CadastrarImagemParaOModuloDeMarca()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar Imagem para o Módulo de Marca", new string[] {
                        "paraTelaDeCadastroSucesso"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 44
 testRunner.Given("que acesso a tela de cadastrado do Jeimis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 45
 testRunner.And("informo a imagem \"D:\\temp\\marca.jpg\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 46
 testRunner.And("seleciono o módulo \"Marca\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 47
 testRunner.When("clico em salvar imagem do Jeimis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 48
 testRunner.Then("visualizo a mensagem \"Imagem salva com sucesso!\" na tela", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cadastrar Imagem para o Módulo de Patente Sem informar o endereço")]
        [NUnit.Framework.CategoryAttribute("paraTelaDeCadastroFalha")]
        public virtual void CadastrarImagemParaOModuloDePatenteSemInformarOEndereco()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar Imagem para o Módulo de Patente Sem informar o endereço", new string[] {
                        "paraTelaDeCadastroFalha"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 52
 testRunner.Given("que acesso a tela de cadastrado do Jeimis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 53
 testRunner.And("informo a imagem \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 54
 testRunner.And("seleciono o módulo \"Patente\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 55
 testRunner.When("clico em salvar imagem do Jeimis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 56
 testRunner.Then("visualizo a mensagem \"O campo Arquivo é obrigatório!\" na tela", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
